#!/usr/bin/env powscript


assert_server_configuration_relevant()
  debug 'Ensure configs has been genereated by relevant installer'
  if isset $SKIP_CHECKS
    debug "SKIP: Ð°ctual check of installer version in ${INVENTORY_FILE} disabled"
  else
    installed_version=$(detect_installed_version)
    if "${SCRIPT_VERSION}" == "${installed_version}"
      debug "Configs has been generated by recent version of installer ${SCRIPT_VERSION}"
    else
      fail "$(build_upgrade_message "${installed_version}")"


detect_installed_version()
  local version=""
  if is_exists_file ${INVENTORY_FILE}
    version=$(grep "^installer_version=" ${INVENTORY_FILE} | sed s/^installer_version=//g)
  if empty $version
    version="0.9"
  echo $version


build_upgrade_message(installed_version)
  translate 'errors.reconfigure_keitaro' "upgrade_command='$(build_upgrade_command)'" \
    "obsolete_tool_command='$(build_obsolete_tool_command "${installed_version}")'"


build_upgrade_command()
  echo "curl keitaro.io/install.sh > run; bash run -rt upgrade,upgrade_to_${SCRIPT_VERSION//\./_}"


build_obsolete_tool_command(installed_version)
  local obsolete_tool_name="${TOOL_NAME}_${installed_version//\./_}"
  echo "${SCRIPT_COMMAND/${TOOL_NAME}/${obsolete_tool_name}}"
