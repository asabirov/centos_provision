#!/usr/bin/env powscript


regenerate_vhost_config(domain, message_key)
  local generating_message="$(translate "${message_key}")"
  local command=""
  local changes=""
  local vhost_path="$(get_vhost_path $domain)"
  local vhost_backup_path="$(get_vhost_backup_path $domain)"
  if is_file_exist $vhost_path no
    debug "Backing up nginx config for ${domain} to ${vhost_backup_path}"
    cp "${vhost_path}" "${vhost_backup_path}"
  if need_to_regenerate_host_config $vhost_path
    command="${command}cp ${NGINX_KEITARO_CONF} $vhost_path && "
    changes="${changes}$(build_sed_expression_from_nginx_setting_block "listen 80" "listen 80")"
    changes="${changes}$(build_sed_expression_from_nginx_setting_block "server_name ${domain}")"
  while isset "${3}"
    changes="${changes}$(build_sed_expression_from_nginx_setting_block "${3}")"
    shift
  command="${command}sed -i${changes} ${vhost_path}"
  run_command "${command}" "${generating_message} ${domain}" "hide_output"


need_to_regenerate_host_config(vhost_path)
  ! is_file_exist $vhost_path no || ! vhost_config_relevant $vhost_path


vhost_config_relevant(vhost_path)
  grep -q -P "^# Generated by Keitaro .* v${RELEASE_VERSION}" "${vhost_path}"


get_vhost_path(domain)
  echo "${NGINX_VHOSTS_DIR}/${domain}.conf"

get_vhost_backup_path(domain)
  echo "${NGINX_VHOSTS_DIR}/${domain}.conf.$(date +%Y%m%d%H%M%S)"


build_sed_expression_from_nginx_setting_block(setting, search_pattern)
  read name value <<< $setting
  if empty $search_pattern
    search_pattern="${name} .*"
  echo " -e 's|${search_pattern}|${name} ${value};|g'"

