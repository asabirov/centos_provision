#!/usr/bin/env powscript


regenerate_nginx_host_config(domain, message_key)
  local generating_message="$(translate "${message_key}")"
  local command=""
  local changes=""
  if is_nginx_config_exist $domain
    command="${command}cp $(vhost_path $domain) $(vhost_backup_path $domain) && "
  if need_to_regenerate_host_config $(vhost_path $domain)
    command="${command}cp ${NGINX_KEITARO_CONF} $(vhost_path $domain) && "
    changes="${changes}$(build_sed_expression_from_nginx_setting_block 'listen: listen 80')"
    changes="${changes}$(build_sed_expression_from_nginx_setting_block 'server_name ${domain}')"
  while isset "${3}"
    changes="${changes}$(build_sed_expression_from_nginx_setting_block "${3}")"
    shift
  command="${command}sed -i ${changes} ${vhost_path}"
  run_command "${command}" "${generating_message} ${domain}" "hide_output"


need_to_regenerate_host_config(vhost_path)
  ! is_nginx_config_exist $vhost_path || ! vhost_config_relevant $vhost_path


is_nginx_config_exist(domain)
  is_file_exist "$(vhost_path $domain)" no


vhost_config_relevant(vhost_path)
  grep -q -P "^# Generated by Keitaro .* v${RELEASE_VERSION}" "${vhost_path}"


vhost_path(domain)
  echo "${NGINX_VHOSTS_DIR}/${domain}.conf"

vhost_backup_path(domain)
  echo "${NGINX_VHOSTS_DIR}/${domain}.conf.$(date +%Y%m%d%H%M%s)"


build_sed_expression_from_nginx_setting_block(setting_block)
  IFS=":" read block setting <<< $setting_block
  if empty $setting
    setting=$block
    block=""
  read name value <<< $setting
  bounds=""
  if isset $block
    bounds='/# begin ${block}/,/# end ${block}/'
  echo "-e '${bounds}s|${name} .*|${name} ${value};|g'"

